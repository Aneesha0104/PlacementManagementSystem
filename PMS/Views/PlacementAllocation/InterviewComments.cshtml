@using static PMS.BOL.PMSEnums

@model PMS.BOL.PlacementAllocationDto
@{
    var statusList = ViewBag.Statuslist as List<PlacementStatus>;

}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Interview</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                   
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>


<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                @if (@ViewBag.ErrorCnfMsg != null)
                {
                    <div class="card-body">
                        <div class="alert alert-danger alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-ban"></i> Alert!</h5>
                            @ViewBag.ErrorCnfMsg
                        </div>
                    </div>
                }
                <!-- general form elements -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Enter Comments</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    @using (Html.BeginForm("InterviewComments", "PlacementAllocation", FormMethod.Post))
                    {
                        @Html.HiddenFor(x=>x.PlacementAllocationId)
                        <div class="form-group">
                                @Html.LabelFor(model => model.CommentDto.CommentForStudent, "Comment For Student")
                                @Html.TextAreaFor(x => x.CommentDto.CommentForStudent, new { @class = "form-control", @placeholder = "Comment For Student", @required = true })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CommentDto.CommentForOrg, "Comment For Org")
                                @Html.TextAreaFor(x => x.CommentDto.CommentForOrg, new { @class = "form-control", @placeholder = "Comment For Org" })
                            </div>

                            <div class="form-group">
                                <label>Placement Status:</label>
                            <br />
                                   
                                    @Html.RadioButtonFor(x => x.PlacementStatus, (byte)PlacementStatus.PLACED) Placed
                                    <br />
                                    @Html.RadioButtonFor(x => x.PlacementStatus, (byte)PlacementStatus.REJECTED) Rejected
                            </div>

                       
                        <!-- /.card-body -->

                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary float-right">Submit</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>